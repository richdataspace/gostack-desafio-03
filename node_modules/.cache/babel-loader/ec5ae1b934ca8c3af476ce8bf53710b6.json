{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermedelima/Documents/repos/dev-space/gostack-template-conceitos-reactjs/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"./styles.css\"; // Aqui é onde foi configurada nossa API.\n\nimport api from './services/api';\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    api.get('repositories').then(response => {\n      setProjects(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    // TODO\n    const response = await api.post('repositories', {\n      title: `Novo Projeto ${Date.now()}`,\n      owner: \"Guilhermino\"\n    });\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n  }\n\n  async function handleRemoveRepository(id) {// TODO\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Reposit\\xF3rio 1\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemoveRepository(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Remover\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guilhermedelima/Documents/repos/dev-space/gostack-template-conceitos-reactjs/src/App.js"],"names":["React","useState","useEffect","api","App","repositories","setRepositories","get","then","response","setProjects","data","handleAddRepository","post","title","Date","now","owner","repository","handleRemoveRepository","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,cAAP,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBC,IAAxB,CAA6BC,QAAQ,IAAI;AACrCC,MAAAA,WAAW,CAACD,QAAQ,CAACE,IAAV,CAAX;AACH,KAFD;AAGH,GAJU,EAIR,EAJQ,CAAT;;AAMA,iBAAeC,mBAAf,GAAqC;AACnC;AACA,UAAMH,QAAQ,GAAG,MAAMN,GAAG,CAACU,IAAJ,CAAS,cAAT,EAAyB;AAC9CC,MAAAA,KAAK,EAAG,gBAAeC,IAAI,CAACC,GAAL,EAAW,EADY;AAE9CC,MAAAA,KAAK,EAAE;AAFuC,KAAzB,CAAvB;AAKA,UAAMC,UAAU,GAAGT,QAAQ,CAACE,IAA5B;AAEAL,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBa,UAAlB,CAAD,CAAf;AAED;;AAED,iBAAeC,sBAAf,CAAsCC,EAAtC,EAA0C,CACxC;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAGE;AAAQ,IAAA,OAAO,EAAE,MAAMD,sBAAsB,CAAC,CAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,CADF,eAWE;AAAQ,IAAA,OAAO,EAAEP,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF,CADF;AAeD;;AAED,eAAeR,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport \"./styles.css\";\n\n// Aqui é onde foi configurada nossa API.\nimport api from './services/api';\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n\n  useEffect(() => {\n    api.get('repositories').then(response => {\n        setProjects(response.data);\n    });\n}, []);\n\n  async function handleAddRepository() {\n    // TODO\n    const response = await api.post('repositories', {\n      title: `Novo Projeto ${Date.now()}`,\n      owner: \"Guilhermino\"\n    });\n\n    const repository = response.data\n\n    setRepositories([...repositories, repository]);\n\n  }\n\n  async function handleRemoveRepository(id) {\n    // TODO\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n        <li>\n          Repositório 1\n\n          <button onClick={() => handleRemoveRepository(1)}>\n            Remover\n          </button>\n        </li>\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}